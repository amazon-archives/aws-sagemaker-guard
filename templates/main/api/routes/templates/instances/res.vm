#set($inputRoot = $input.path('$'))
#set ( $root="https://${!context.apiId}.execute-api.${AWS::Region}.amazonaws.com/${!context.stage}")

{"collection":{
    "version":"1.0",
    "href":"$root/api/template/instances",
    "template":{
        "data":{
            "schema":{
                "type":"object",
                "properties":{
                    "ID":{
                        "title":"Instance ID",
                        "description":"The unique identifier for this instance",
                        "type":"string",
                        "immutable":true,
                        "default":"$context.requestId"
                    },
                    "DisplayName":{
                        "title":"Instance DisplayName",
                        "description":"A friendly name for this instance",
                        "type":"string"
                    },
                    "Description":{
                        "title":"Instance Description",
                        "description":"A brief description of how this instance will be used",
                        "type":"string",
                        "maxLength":500
                    },
                    "InstanceType":{
                        "title":"Instance Compute Type",
                        "description":"The EC2 instance type for this notebook",
                        "type":"string",
                        "enum":[
                            #foreach( $object in $inputRoot.instances)
                            {
                                "value":"$object.value",
                                "text":"$object.name",
                                "description":"$object.description"
                            }#if( $foreach.hasNext ),#end
                            #end
                        ],
                        "default":"ml.t3.medium"
                    },
                    "RoleArn":{
                        "title":"Instance IAM RoleArn",
                        "description":"Choose the IAM role that will give users on the notebook instance to call AWS APIs",
                        "type":"string",
                        "enum":[
                            {
                                "text":"DefaultRole",
                                "value":"${DefaultNotebookRole.Arn}",
                                "href":"https://console.aws.amazon.com/iam/home?region=${AWS::Region}#/roles/${DefaultNotebookRole}",
                                "description":"Default Sagemaker Role"
                            }
                            #foreach( $object in $inputRoot.roles)
                            ,{
                                "value":"$object.Arn",
                                "text":"$object.RoleName",
                                "href":"https://console.aws.amazon.com/iam/home?region=${AWS::Region}#/roles/$object.RoleName",
                                "description":"$object.Description"
                            }
                            #end
                        ],
                        "default":"${DefaultNotebookRole.Arn}"
                    },
                    #if( $inputRoot.keys.length() != 0)
                    "KmsKeyId":{
                        "title":"KMS key Id",
                        "description":"A AWS KMS key to use for encrypting the data volumnes of the instance",
                        "type":"string",
                        "immutable":true,
                        "enum":[
                            #foreach( $object in $inputRoot.keys){
                                "text":"$object.KeyId",
                                "value":"$object.KeyId",
                                "href":"https://console.aws.amazon.com/kms/home?region=${AWS::Region}#/kms/keys/$object.KeyId/"
                            }#if( $foreach.hasNext ),#end
                            #end
                        ]
                    },
                    #end
                    "DirectInternetAccess":{
                        "title":"Enable/Disable Direct Internet Access",
                        "type":"string",
                        "immutable":true,
                        "enum":["Disabled","Enabled"],
                        "default":"Enabled"
                    },
                    "IdleShutdown":{
                        "title":"Idle Shutdown Wait Period in minutes",
                        "description":"The number of minutes of inactivity before the instance is shutdown to save cost",
                        "type":"string",
                        "enum":[{
                            "value":"30",
                            "text":"30 minutes"
                        },{
                            "value":"45",
                            "text":"45 minutes"
                        },{
                            "value":"60",
                            "text":"1 hr"
                        }],
                        "default":"30"
                    },
                    #if ($inputRoot.endpoints.length() != 0)
                    "GlueDevEndpoint":{
                        "title":"Glue development endpoints",
                        "type":"string",
                        "enum":[
                            #foreach( $object in $inputRoot.endpoints){
                                "text":"$object.name",
                                "value":"$object.name",
                                "description":"Nodes:$object.nodes VPC:$object.vpc",
                                "href":"https://console.aws.amazon.com/glue/home?region=${AWS::Region}#devEndpoint:name=$object.name"
                            }#if( $foreach.hasNext ),#end
                            #end
                        ]
                    },#end
                    #if ($inputRoot.documents.length() != 0)
                    "OnStartDocument":{
                        "title":"SSM OnStart Document",
                        "description":"An SSM document to run on each instance start up. The document must be of type 'Command' and have the following parameters: #foreach( $object in $inputRoot.params)$object#if( $foreach.hasNext ), #end#end.",
                        "type":"string",
                        "enum":[
                            #foreach( $object in $inputRoot.documents){
                                "text":"$object.Name",
                                "value":"$object.Name",
                                "href":"https://console.aws.amazon.com/systems-manager/documents/$object.Name/description?region=${AWS::Region}"
                            }#if( $foreach.hasNext ),#end#end
                        ]
                    },
                    "OnCreateDocument":{
                        "title":"SSM OnCreate Document",
                        "immutable":true,
                        "description":"An SSM document to run on instance creation. The document must be of type 'Command' and have the following parameters: #foreach( $object in $inputRoot.params)$object#if( $foreach.hasNext ), #end#end.",
                        "ask":"Tell me about the OnCreate Document",
                        "type":"string",
                        "enum":[
                            #foreach( $object in $inputRoot.documents){
                                "text":"$object.Name",
                                "value":"$object.Name",
                                "href":"https://console.aws.amazon.com/systems-manager/documents/$object.Name/description?region=${AWS::Region}"
                            }#if( $foreach.hasNext ),#end#end
                        ]
                    }#end
                },
                "required":["ID","InstanceType","RoleArn"]
            }        
        }
    }
}}
    
