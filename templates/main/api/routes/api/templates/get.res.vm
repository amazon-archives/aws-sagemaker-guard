#set ( $root="https://${!context.apiId}.execute-api.${!stageVariables.Region}.amazonaws.com/${!context.stage}")
#set ( $base="$root/api/$input.path('$.Type')/$input.path('$.ID')" )
{
    "collection":{
        "version":"1.0",
        "href":"$base",
        "links":[],
        "items":[{
            "href":"$base",
            "data":$input.json('$.attributes'),
            "links":[
                #if ($input.path('$.attributes.status')!="StackFailed")
                #if ($input.path('$.Type')=="groups")
                {
                    "href":"$base/children/groups",
                    "title":"Groups that are a part of this group",
                    "rel":"child"
                },
                {
                    "href":"$base/children/users",
                    "title":"Users that are a part of this group",
                    "rel":"child"
                },
                {
                    "href":"$base/children/instances",
                    "title":"Instances this group has access to",
                    "rel":"child"
                },
                {
                    "href":"$base/parents/groups",
                    "title":"Groups this group is in",
                    "rel":"parent"
                }
                #elseif ($input.path('$.Type')=="users")
                {
                    "href":"$base/children/instances",
                    "title":"Instances this user has access to",
                    "rel":"child"
                },
                {
                    "href":"$base/parents/groups",
                    "title":"Groups this user is in",
                    "rel":"parent"
                }
                #elseif ($input.path('$.Type')=="instances")
                {
                    "href":"$base/parents/groups",
                    "title":"Groups this Instance is attached to",
                    "rel":"parent"
                },
                {
                    "href":"$base/parents/users",
                    "title":"Users this Instance is attached to",
                    "rel":"parent"
                },
                {
                    "href":"https://console.aws.amazon.com/cloudwatch/home?region=${AWS::Region}#logEventViewer:group=${SSMLogGroup};stream=$input.path('$.attributes.InstanceID')-jupyter;",
                    "title":"Jupyter server logs",
                    "rel":"info"
                }
                #if ( $input.path('$.attributes.InstanceID') ),{
                    "href":"https://console.aws.amazon.com/systems-manager/managed-instances/$input.path('$.attributes.InstanceID')/description?region=${AWS::Region}",
                    "title":"SSM link",
                    "rel":"info"
                } #end
                #end
                #end
            ]
        }],
        "queries":[],
        "template":{
            #if ($input.path('$.attributes.status')!="failed")
            "data":{
                #if ($input.path('$.Type')=="instances")
                "schema":{
                    "href":"$root/templates/instance?Type=$input.path('$.Type')&ID=$input.path('$.ID')"
                },
                #else
                "schema":{
                    "href":"$root/templates/items?Type=$input.path('$.Type')&ID=$input.path('$.ID')"
                },
                #end
                #if ($input.path('$.Type')=="groups")
                    "prompt":"Update group information"
                #elseif ($input.path('$.Type')=="users")
                    "prompt":"Update user information"
                #elseif ($input.path('$.Type')=="instances")
                    "prompt":"Update instance information"
                #end
            }#end
        }
    }
}

