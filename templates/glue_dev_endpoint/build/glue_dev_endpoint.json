{
  "Parameters": {
    "LambdaUtilLayer": {
      "Type": "String"
    },
    "SecurityGroupId": {
      "Type": "String"
    },
    "SubnetId": {
      "Type": "String"
    },
    "VPC": {
      "Type": "String"
    }
  },
  "Conditions": {},
  "Outputs": {
    "RoleArn": {
      "Value": {
        "Fn::GetAtt": [
          "EndpointRole",
          "Arn"
        ]
      }
    },
    "EndpointName": {
      "Value": {
        "Ref": "GlueDevEndpoint"
      }
    }
  },
  "Resources": {
    "RoleNameLambda": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "ZipFile": "var response=require(\"cfn-response\");exports.handler=function(event,context,callback){console.log(JSON.stringify(event,null,2));try{var params=event.ResourceProperties,name=params.Arn.match(/arn:.*:.*::.*:role\\/(.*)/)[1];response.send(event,context,response.SUCCESS,params,name)}catch(e){console.log(e),response.send(event,context,response.FAILED,params,name)}};"
        },
        "Handler": "index.handler",
        "MemorySize": "128",
        "Layers": [
          {
            "Ref": "LambdaUtilLayer"
          }
        ],
        "Environment": {
          "Variables": {}
        },
        "Role": {
          "Fn::GetAtt": [
            "CFNLambdaRole",
            "Arn"
          ]
        },
        "Runtime": "nodejs6.10",
        "Timeout": 60
      }
    },
    "VariableLambda": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "ZipFile": "var response=require(\"cfn-response\");exports.handler=function(event,context,callback){console.log(JSON.stringify(event,null,2));var params=event.ResourceProperties;delete params.ServiceToken,Object.keys(params).forEach(function(key){var value=params[key];\"object\"==typeof value&&(\"toLowerCase\"===value.op?params[key]=value.value.toLowerCase():params[key]=value.value)}),response.send(event,context,response.SUCCESS,params)};"
        },
        "Handler": "index.handler",
        "MemorySize": "128",
        "Layers": [
          {
            "Ref": "LambdaUtilLayer"
          }
        ],
        "Environment": {
          "Variables": {}
        },
        "Role": {
          "Fn::GetAtt": [
            "CFNLambdaRole",
            "Arn"
          ]
        },
        "Runtime": "nodejs6.10",
        "Timeout": 60
      }
    },
    "CFNLambdaRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              },
              "Action": "sts:AssumeRole"
            }
          ]
        },
        "Path": "/",
        "ManagedPolicyArns": [
          "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
        ]
      }
    },
    "GlueDevEndpoint": {
      "Type": "AWS::Glue::DevEndpoint",
      "Properties": {
        "EndpointName": {
          "Ref": "AWS::StackName"
        },
        "NumberOfNodes": "2",
        "RoleArn": {
          "Fn::GetAtt": [
            "EndpointRole",
            "Arn"
          ]
        },
        "SecurityGroupIds": {
          "Ref": "EndpointSecurityGroup"
        },
        "SubnetId": {
          "Ref": "SubnetId"
        }
      }
    },
    "EndpointSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "VpcId": {
          "Ref": "VPC"
        },
        "GroupDescription": "Allow Access",
        "SecurityGroupIngress": []
      }
    },
    "EndpointRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": "glue.amazonaws.com"
              },
              "Action": "sts:AssumeRole"
            }
          ]
        },
        "Path": "/",
        "ManagedPolicyArns": [
          "arn:aws:iam::aws:policy/service-role/AWSGlueServiceRole"
        ]
      }
    }
  },
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": ""
}